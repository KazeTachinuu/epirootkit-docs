<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tux Fan Club Docs</title><link>/</link><description>Recent content on Tux Fan Club Docs</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 20 May 2025 02:27:40 +0200</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Presentation</title><link>/docs/01-introduction/presentation/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/01-introduction/presentation/</guid><description>&lt;h1 id="présentation">Présentation &lt;a href="#pr%c3%a9sentation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h1>&lt;h2 id="equipage">Equipage &lt;a href="#equipage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;div style="display: flex; justify-content: space-between; gap: 20px; flex-wrap: wrap;">
 &lt;div style="flex: 1; min-width: 250px; text-align: center;">
 &lt;strong>Capitaine&lt;/strong>: Hugo Sibony 
 &lt;br>
 &lt;img src="/images/HS/hugo.png" alt="Hugo" style="width: 50%;">
 &lt;/div>
 &lt;div style="flex: 1; min-width: 250px; text-align: center;">
 &lt;strong>Responsable Sabordage et mutinerie&lt;/strong>: Léa Bonet 
 &lt;br>
 &lt;img src="/images/HS/lea.png" alt="Lea" style="width: 50%;">
 &lt;/div>
 &lt;/div>
 
&lt;h2 id="nom-de-léquipe">Nom de l&amp;rsquo;équipe &lt;a href="#nom-de-l%c3%a9quipe" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Nous sommes Tux Fan Club 🐧&lt;/p>
&lt;p>C&amp;rsquo;est Léa qui a choisi le nom car c&amp;rsquo;est la seule personne du groupe un peu créative 👀&lt;/p>
&lt;p>(Et par ce que Hugo est gentleman et a laissé le choix a la seule femme du groupe)&lt;/p></description></item><item><title>Initial Setup &amp; Installation</title><link>/docs/02-setup/environment/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/02-setup/environment/</guid><description>&lt;h1 id="host-environment-setup-from-a-blank-system">Host Environment Setup (from a Blank System) &lt;a href="#host-environment-setup-from-a-blank-system" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h1>&lt;blockquote>
&lt;p>&lt;strong>Assumption:&lt;/strong> You are starting from a fresh Ubuntu 24.10 (amd64) install with no extra packages.&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-update-system">1. Update System &lt;a href="#1-update-system" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="0e626b2" class="language-bash ">
 &lt;code>sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="2-install-essential-packages">2. Install Essential Packages &lt;a href="#2-install-essential-packages" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Install all required tools for virtualization, development, and Node.js:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="b8ce25f" class="language-bash ">
 &lt;code>sudo apt install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils build-essential linux-headers-$(uname -r) curl git nodejs npm&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;blockquote>
&lt;p>&lt;strong>Tip:&lt;/strong> If you get an error about missing kernel headers, ensure your kernel version matches the installed headers. Use &lt;code>uname -r&lt;/code> and &lt;code>apt search linux-headers&lt;/code> to check.&lt;/p></description></item><item><title>VM Installation &amp; Verification</title><link>/docs/02-setup/vm-installation/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/02-setup/vm-installation/</guid><description>&lt;h1 id="virtual-machine-installation--verification">Virtual Machine Installation &amp;amp; Verification &lt;a href="#virtual-machine-installation--verification" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h1>&lt;blockquote>
&lt;p>&lt;strong>You must have completed &lt;a data-bs-delay="{&amp;#34;hide&amp;#34;:300,&amp;#34;show&amp;#34;:550}" data-bs-html="true" data-bs-title="&lt;a href='/docs/02-setup/environment/'>&lt;p>SETUP&lt;/p>&lt;strong>Initial Setup &amp; Installation&lt;/strong>&lt;br>Prepare your host system from scratch for the EpiRootkit project.&lt;/a>" data-bs-toggle="tooltip" href="/docs/02-setup/environment/">Initial Setup &amp;amp; Installation&lt;/a> before proceeding.&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-choose-your-vm-setup-method">1. Choose Your VM Setup Method &lt;a href="#1-choose-your-vm-setup-method" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>
&lt;nav>
	&lt;div class="nav nav-tabs" id="nav-tab" role="tablist">

		
		
		
		

		

		&lt;a class="nav-link active"
		 id="abcfedTab" data-bs-toggle="tab" data-bs-target="#abcfed"
		 type="button" role="tab" aria-controls="abcfed" aria-selected="true">Recommended: Pre-built Disks&lt;/a>

		

		&lt;a class="nav-link "
		 id="ecbafdTab" data-bs-toggle="tab" data-bs-target="#ecbafd"
		 type="button" role="tab" aria-controls="ecbafd" aria-selected="true">Build Disks Yourself&lt;/a>

		

	&lt;/div>
&lt;/nav>

&lt;div class="tab-content" id="nav-tab-content">

	







&lt;div class="tab-pane fade show active" id="abcfed" role="tabpanel" aria-labelledby="nav-1">

	&lt;h3 id="download-pre-built-images">Download Pre-built Images &lt;a href="#download-pre-built-images" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Download both QCOW2 images and place them in the &lt;code>vm/&lt;/code> directory at the project root:&lt;/p></description></item><item><title>Attacking VM Setup</title><link>/docs/02-setup/attacking-vm-setup/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/02-setup/attacking-vm-setup/</guid><description>&lt;p>Follow these steps once the host environment is ready and the VMs have been created or downloaded.&lt;/p>
&lt;h2 id="usage">Usage &lt;a href="#usage" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ol>
&lt;li>Ensure the &lt;code>attacker.qcow2&lt;/code> disk is in the &lt;code>vm/&lt;/code> directory (verify via &lt;code>./scripts/check_vms.sh&lt;/code> or see &lt;a href="/docs/02-setup/vm-installation/">VM Installation &amp;amp; Verification&lt;/a>).&lt;/li>
&lt;li>Launch the attacking VM with:



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="b9b360f" class="language-bash ">
 &lt;code>sudo ./scripts/run_vms.sh attacker&lt;/code>
 &lt;/pre>
 &lt;/div>
Or both VMs with:



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="fc8077c" class="language-bash ">
 &lt;code>sudo ./scripts/run_vms.sh&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;/li>
&lt;li>On the attacking VM:
&lt;ul>
&lt;li>Auto-login is enabled for user &lt;code>attacker&lt;/code> (no password prompt).&lt;/li>
&lt;li>The static IP is &lt;strong>192.168.200.11&lt;/strong>.&lt;/li>
&lt;li>The password is &lt;code>jules&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>For more details on the network configuration and helper scripts, see &lt;a href="/docs/02-setup/environment/#how-it-works">Initial Setup &amp;amp; Installation&lt;/a>.&lt;/p></description></item><item><title>Victim VM Setup</title><link>/docs/02-setup/victim-vm-setup/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/02-setup/victim-vm-setup/</guid><description>&lt;p>Follow these steps once the host environment is ready and the VMs have been created or downloaded.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Place the &lt;code>victim.qcow2&lt;/code> disk in the &lt;code>vm/&lt;/code> directory at the project root (verify via &lt;code>./scripts/check_vms.sh&lt;/code> or see &lt;a href="/docs/02-setup/vm-installation/">VM Installation &amp;amp; Verification&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Launch the victim VM with:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="39be92f" class="language-bash ">
 &lt;code>sudo ./scripts/run_vms.sh victim&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Or both VMs with:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="fc8077c" class="language-bash ">
 &lt;code>sudo ./scripts/run_vms.sh&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;/li>
&lt;li>
&lt;p>On the victim VM:&lt;/p>
&lt;ul>
&lt;li>The VM has auto-login enabled for the &lt;code>victim&lt;/code> user (no password prompt).&lt;/li>
&lt;li>Its static IP is &lt;strong>192.168.200.10&lt;/strong>.&lt;/li>
&lt;li>The password is &lt;code>jules&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>When finished, close the QEMU window or use &lt;strong>Ctrl+C&lt;/strong> on the host script to shut down both VMs.&lt;/p></description></item><item><title>Overview</title><link>/docs/03-attacking-program/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03-attacking-program/overview/</guid><description>&lt;h2 id="todo-implement-additional-c2-server-features">TODO: Implement Additional C2 Server Features &lt;a href="#todo-implement-additional-c2-server-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Add advanced client management (aliasing, grouping)&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement encrypted web UI integration&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add audit logging and event history&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement advanced command scheduling&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add more robust error handling and reporting&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p>
&lt;p>The Attacking Program is the command and control (C2) server for EpiRootkit. It is designed to run on a Linux-based attacking virtual machine and provides a command-line interface (CLI) to manage and interact with EpiRootkit instances on victim machines.&lt;/p></description></item><item><title>Installation</title><link>/docs/03-attacking-program/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03-attacking-program/installation/</guid><description>&lt;h1 id="attacking-program-c2-server-installation">Attacking Program (C2 Server) Installation &lt;a href="#attacking-program-c2-server-installation" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h1>&lt;blockquote>
&lt;p>&lt;strong>Assumption:&lt;/strong> You are starting from a fresh Ubuntu system. Complete &lt;a data-bs-delay="{&amp;#34;hide&amp;#34;:300,&amp;#34;show&amp;#34;:550}" data-bs-html="true" data-bs-title="&lt;a href='/docs/02-setup/environment/'>&lt;p>SETUP&lt;/p>&lt;strong>Initial Setup &amp; Installation&lt;/strong>&lt;br>Prepare your host system from scratch for the EpiRootkit project.&lt;/a>" data-bs-toggle="tooltip" href="/docs/02-setup/environment/">Host Environment Setup&lt;/a> and &lt;a data-bs-delay="{&amp;#34;hide&amp;#34;:300,&amp;#34;show&amp;#34;:550}" data-bs-html="true" data-bs-title="&lt;a href='/docs/02-setup/vm-installation/'>&lt;p>SETUP&lt;/p>&lt;strong>VM Installation &amp; Verification&lt;/strong>&lt;br>Set up and verify the attacker and victim VMs from scratch.&lt;/a>" data-bs-toggle="tooltip" href="/docs/02-setup/vm-installation/">VM Installation&lt;/a> first.&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-deployment">1. Deployment &lt;a href="#1-deployment" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>
&lt;nav>
	&lt;div class="nav nav-tabs" id="nav-tab" role="tablist">

		
		
		
		

		

		&lt;a class="nav-link active"
		 id="fbdceaTab" data-bs-toggle="tab" data-bs-target="#fbdcea"
		 type="button" role="tab" aria-controls="fbdcea" aria-selected="true">Deploy the Full Stack (Recommended)&lt;/a>

		

		&lt;a class="nav-link "
		 id="fbedacTab" data-bs-toggle="tab" data-bs-target="#fbedac"
		 type="button" role="tab" aria-controls="fbedac" aria-selected="true">Manual Setup (Advanced)&lt;/a>

		

	&lt;/div>
&lt;/nav>

&lt;div class="tab-content" id="nav-tab-content">

	






&lt;div class="tab-pane fade show active" id="fbdcea" role="tabpanel" aria-labelledby="nav-1">

	&lt;p>The simplest way to build and launch both the frontend and backend is with the provided script:&lt;/p></description></item><item><title>Usage &amp; CLI Commands</title><link>/docs/03-attacking-program/usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03-attacking-program/usage/</guid><description>&lt;h2 id="running-the-server">Running the Server &lt;a href="#running-the-server" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>In the &lt;code>attacking_program&lt;/code> directory, run:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="ef539d5" class="language-bash ">
 &lt;code>pnpm start
# Or
npm start&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>The server starts automatically and presents the &lt;code>c2-server$ &lt;/code> prompt. Real-time event logs appear in the console.&lt;/p>
&lt;h2 id="cli-commands">CLI Commands &lt;a href="#cli-commands" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Command&lt;/th>
 &lt;th>Aliases&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>server start&lt;/code>&lt;/td>
 &lt;td>&lt;code>start&lt;/code>&lt;/td>
 &lt;td>Starts TCP server (auto-starts with &lt;code>pnpm start&lt;/code>).&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>server stop&lt;/code>&lt;/td>
 &lt;td>&lt;code>stop&lt;/code>&lt;/td>
 &lt;td>Stops TCP server.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>clients list&lt;/code>&lt;/td>
 &lt;td>&lt;code>ls&lt;/code>, &lt;code>list&lt;/code>&lt;/td>
 &lt;td>Lists connected clients (alias, ID, auth status, last ping).&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>send &amp;lt;clientAlias&amp;gt; &amp;lt;command...&amp;gt;&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>Sends &lt;code>&amp;lt;command...&amp;gt;&lt;/code> to specified &lt;code>&amp;lt;clientAlias&amp;gt;&lt;/code>.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>exit&lt;/code>&lt;/td>
 &lt;td>&lt;code>quit&lt;/code>&lt;/td>
 &lt;td>Stops server and exits application.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>&lt;code>&amp;lt;clientAlias&amp;gt;&lt;/code>: Target client alias (e.g., &lt;code>Client-1&lt;/code> from &lt;code>clients list&lt;/code>).&lt;/li>
&lt;li>&lt;code>&amp;lt;command...&amp;gt;&lt;/code>: Command string for the victim machine.&lt;/li>
&lt;/ul>
&lt;p>Event logs provide feedback on connections, authentication attempts, data exchanges, errors, and command results. When a command is executed on a rootkit and results (such as stdout, stderr, or exit status) are sent back, they will be displayed in these logs.&lt;/p></description></item><item><title>Configuration</title><link>/docs/03-attacking-program/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03-attacking-program/configuration/</guid><description>&lt;h1 id="c2-server-configuration">C2 Server Configuration &lt;a href="#c2-server-configuration" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h1>&lt;blockquote>
&lt;p>&lt;strong>You must configure the C2 server before first use.&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-configuration-file-env">1. Configuration File: &lt;code>.env&lt;/code> &lt;a href="#1-configuration-file-env" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>All critical settings are loaded from a &lt;code>.env&lt;/code> file in the &lt;code>attacking_program/&lt;/code> directory. If you haven&amp;rsquo;t already, copy the example:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="90df811" class="language-bash ">
 &lt;code>cp .env.example .env&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Open &lt;code>.env&lt;/code> in your editor and set the following:&lt;/p>
&lt;h3 id="required-settings">Required Settings &lt;a href="#required-settings" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>C2_PORT&lt;/code> — TCP port for EpiRootkit connections (default: 4444)&lt;/li>
&lt;li>&lt;code>ENCRYPTION_KEY&lt;/code> — &lt;strong>Must be a 32-byte (256-bit) random string&lt;/strong>&lt;/li>
&lt;li>&lt;code>PASSWORD_HASH&lt;/code> — &lt;strong>Must be a 128-character lowercase SHA512 hex string&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="how-to-generate-secure-values">How to Generate Secure Values &lt;a href="#how-to-generate-secure-values" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;h4 id="generate-a-32-byte-encryption_key">Generate a 32-byte ENCRYPTION_KEY &lt;a href="#generate-a-32-byte-encryption_key" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h4>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="c1c24f1" class="language-bash ">
 &lt;code>head -c 32 /dev/urandom | base64 | head -c 32&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Paste this value into your &lt;code>.env&lt;/code> as &lt;code>ENCRYPTION_KEY&lt;/code>.&lt;/p></description></item><item><title>Security Features</title><link>/docs/03-attacking-program/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03-attacking-program/security/</guid><description>&lt;h2 id="todo-implement-security-features">TODO: Implement Security Features &lt;a href="#todo-implement-security-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Enforce end-to-end encryption for all C2 traffic&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add configurable password policies&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement multi-factor authentication for operators&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add rate limiting and brute-force protection&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Document all security mechanisms in detail&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p>
&lt;p>The C2 server employs two main security mechanisms:&lt;/p>
&lt;h2 id="1-message-encryption-aes-256-gcm">1. Message Encryption: AES-256-GCM &lt;a href="#1-message-encryption-aes-256-gcm" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Purpose: Encrypts all TCP C2 traffic for confidentiality, integrity, and authenticity.&lt;/li>
&lt;li>Key: Uses a 32-byte &lt;code>ENCRYPTION_KEY&lt;/code> (must be changed from default and kept secret).&lt;/li>
&lt;li>Format: Encrypted messages are transmitted as a colon-separated string: &lt;code>iv_hex:authtag_hex:ciphertext_hex&lt;/code>.&lt;/li>
&lt;li>Details: See &lt;code>src/utils/encryption.js&lt;/code> and &lt;a data-bs-delay="{&amp;#34;hide&amp;#34;:300,&amp;#34;show&amp;#34;:550}" data-bs-html="true" data-bs-title="&lt;a href='/docs/03-attacking-program/configuration/'>&lt;p>ATTACKING PROGRAM (C2 SERVER)&lt;/p></description></item><item><title>Configuration Justifications</title><link>/docs/04-epirootkit/configuration-justifications/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/04-epirootkit/configuration-justifications/</guid><description>&lt;div class="alert alert-info d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">
 
 &lt;span class="material-icons size-20 me-2">
 info
 &lt;/span>&lt;/div>
 
 &lt;div class="w-100">This page explains why we chose Ubuntu 20.04 LTS with the 5.4.x kernel for our rootkit development and testing.&lt;/div>
 &lt;/div>
&lt;h2 id="environment">Environment &lt;a href="#environment" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;strong>OS&lt;/strong>: Ubuntu 20.04 LTS (Focal Fossa)&lt;/li>
&lt;li>&lt;strong>Kernel&lt;/strong>: 5.4.x (LTS)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="why-ubuntu-2004-lts">Why Ubuntu 20.04 LTS? &lt;a href="#why-ubuntu-2004-lts" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>
&lt;div class="alert alert-success d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">
 
 check
 &lt;/div>
 
 &lt;div class="w-100">Perfect balance between realism and convinience.&lt;/div>
 &lt;/div>
&lt;ul>
&lt;li>Widely deployed on servers and desktops&lt;/li>
&lt;li>Official cloud and container images simplify automation&lt;/li>
&lt;li>Already uses interesting kernel version (5.4.x) so no need to compile.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="why-kernel-54x">Why Kernel 5.4.x? &lt;a href="#why-kernel-54x" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>
&lt;div class="alert alert-primary d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">
 
 &lt;span class="material-icons size-20 me-2">
 info
 &lt;/span>&lt;/div>
 
 &lt;div class="w-100">Balances modern hooking APIs with exported symbols and no mandatory module signing.&lt;/div>
 &lt;/div>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Full ftrace support&lt;/strong>&lt;/p></description></item><item><title>Connection &amp; Authentication</title><link>/docs/04-epirootkit/connection-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/04-epirootkit/connection-authentication/</guid><description>&lt;h2 id="todo-implement-connection--authentication-features">TODO: Implement Connection &amp;amp; Authentication Features &lt;a href="#todo-implement-connection--authentication-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Establish TCP connection to C2 server&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement persistent reconnection logic&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add secure authentication handshake&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Handle authentication failures and retries&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Document connection protocol and error handling&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Deployment</title><link>/docs/04-epirootkit/deployment/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/04-epirootkit/deployment/</guid><description>&lt;h1 id="epirootkit-deployment">EpiRootkit Deployment &lt;a href="#epirootkit-deployment" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h1>&lt;blockquote>
&lt;p>&lt;strong>Assumption:&lt;/strong> You are starting from a fresh Ubuntu 20.04 VM. Complete &lt;a data-bs-delay="{&amp;#34;hide&amp;#34;:300,&amp;#34;show&amp;#34;:550}" data-bs-html="true" data-bs-title="&lt;a href='/docs/02-setup/vm-installation/'>&lt;p>SETUP&lt;/p>&lt;strong>VM Installation &amp; Verification&lt;/strong>&lt;br>Set up and verify the attacker and victim VMs from scratch.&lt;/a>" data-bs-toggle="tooltip" href="/docs/02-setup/vm-installation/">VM Installation&lt;/a> first.&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-install-build-tools-and-kernel-headers">1. Install Build Tools and Kernel Headers &lt;a href="#1-install-build-tools-and-kernel-headers" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="69caee5" class="language-bash ">
 &lt;code>sudo apt update
sudo apt install -y build-essential linux-headers-$(uname -r) git&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;blockquote>

&lt;div class="alert alert-info d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">
 
 &lt;span class="material-icons size-20 me-2">
 info
 &lt;/span>&lt;/div>
 
 &lt;div class="w-100">Check your kernel version with &lt;code>uname -r&lt;/code>. The headers must match exactly!&lt;/div>
 &lt;/div>
&lt;/blockquote>
&lt;h2 id="2-clone-or-copy-the-project">2. Clone or Copy the Project &lt;a href="#2-clone-or-copy-the-project" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If not already present, copy the &lt;code>rootkit/&lt;/code> directory into your VM, or clone your repository.&lt;/p></description></item><item><title>Security Interaction with C2</title><link>/docs/04-epirootkit/security-interaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/04-epirootkit/security-interaction/</guid><description>&lt;h2 id="todo-implement-security-interaction-features">TODO: Implement Security Interaction Features &lt;a href="#todo-implement-security-interaction-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Enforce encrypted communication for all C2 interactions&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement strict authentication and authorization checks&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add protocol validation and error handling&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Document all security protocols and best practices&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Command Execution</title><link>/docs/04-epirootkit/command-execution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/04-epirootkit/command-execution/</guid><description>&lt;h2 id="todo-implement-command-execution-features">TODO: Implement Command Execution Features &lt;a href="#todo-implement-command-execution-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Parse and validate incoming command messages&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Execute commands securely in kernel/user space&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Capture and return stdout, stderr, and exit code&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Handle command errors and edge cases&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Test command execution end-to-end&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Command Execution</title><link>/docs/04-epirootkit/features/command-execution/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/04-epirootkit/features/command-execution/</guid><description>&lt;h2 id="todo-implement-command-execution-features">TODO: Implement Command Execution Features &lt;a href="#todo-implement-command-execution-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Parse and validate incoming command messages&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Execute commands securely in kernel/user space&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Capture and return stdout, stderr, and exit code&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Handle command errors and edge cases&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Test command execution end-to-end&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Connection</title><link>/docs/04-epirootkit/features/connection/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/04-epirootkit/features/connection/</guid><description>&lt;h2 id="todo-implement-connection-features">TODO: Implement Connection Features &lt;a href="#todo-implement-connection-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Establish and maintain TCP connection to C2&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement reconnection and keepalive logic&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Handle connection errors and timeouts&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Document connection protocol and troubleshooting&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Crypto</title><link>/docs/04-epirootkit/features/crypto/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/04-epirootkit/features/crypto/</guid><description>&lt;h2 id="todo-implement-crypto-features">TODO: Implement Crypto Features &lt;a href="#todo-implement-crypto-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Add AES-256-GCM encryption for all communications&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Securely manage and store encryption keys&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement message authentication and integrity checks&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Document crypto implementation and security considerations&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Remote Exec &amp; File Transfer</title><link>/docs/04-epirootkit/features/file-transfer/</link><pubDate>Sun, 11 May 2025 18:35:00 +0100</pubDate><guid>/docs/04-epirootkit/features/file-transfer/</guid><description>&lt;h2 id="todo-implement-file-transfer-features">TODO: Implement File Transfer Features &lt;a href="#todo-implement-file-transfer-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Design and implement secure file upload from C2 to rootkit
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Define protocol for file upload (message format, chunking, etc.)&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement file write in kernel (e.g., using &lt;code>filp_open&lt;/code>, &lt;code>kernel_write&lt;/code>)&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Handle errors and edge cases (permissions, disk space, etc.)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Design and implement secure file download from rootkit to C2
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Define protocol for file download (request, chunking, etc.)&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement file read in kernel (e.g., using &lt;code>filp_open&lt;/code>, &lt;code>kernel_read&lt;/code>)&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Stream file data securely to C2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Integrate file transfer with C2 server and client
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Add CLI/Web UI commands for upload/download&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Display transfer status and errors in UI&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Test file transfer end-to-end (various file sizes, error cases)&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Fileless Dropper &amp; Rootkit Loader</title><link>/docs/04-epirootkit/features/fileless-dropper-loader/</link><pubDate>Sun, 11 May 2025 18:15:00 +0100</pubDate><guid>/docs/04-epirootkit/features/fileless-dropper-loader/</guid><description>&lt;h2 id="todo-implement-fileless-dropper--loader">TODO: Implement Fileless Dropper &amp;amp; Loader &lt;a href="#todo-implement-fileless-dropper--loader" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Implement in-memory ELF staging using &lt;code>memfd_create&lt;/code>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Develop loader to extract and decompress kernel image&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement symbol resolution and LKM insertion&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add secure cleanup of temporary files and processes&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Integrate dropper/loader with C2 workflow&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Test on supported kernels and document limitations&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Stealth Hooks &amp; daniel.* Commands</title><link>/docs/04-epirootkit/features/hiding/</link><pubDate>Sun, 11 May 2025 18:25:00 +0100</pubDate><guid>/docs/04-epirootkit/features/hiding/</guid><description>&lt;h2 id="todo-implement-stealth--hiding-features">TODO: Implement Stealth &amp;amp; Hiding Features &lt;a href="#todo-implement-stealth--hiding-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Hook &lt;code>getdents()&lt;/code>/&lt;code>getdents64()&lt;/code> to hide files and directories&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Hide kernel module from &lt;code>/proc/modules&lt;/code> and &lt;code>lsmod&lt;/code>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement PID hiding via dynamic list&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement stealth command channel via &lt;code>rmdir()&lt;/code>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add privilege escalation and config dump commands&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Test all hiding features and document limitations&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p>
&lt;h1 id="1-file--directory-hiding">1. File &amp;amp; Directory Hiding &lt;a href="#1-file--directory-hiding" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h1>&lt;p>&lt;strong>What we did&lt;/strong>&lt;br>
We hook &lt;code>getdents()&lt;/code>/&lt;code>getdents64()&lt;/code>.&lt;/p></description></item><item><title>Password Protection</title><link>/docs/04-epirootkit/features/password/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/04-epirootkit/features/password/</guid><description>&lt;h2 id="todo-implement-password-protection-features">TODO: Implement Password Protection Features &lt;a href="#todo-implement-password-protection-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Add password-based authentication for rootkit commands&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Store password hashes securely&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement password change and reset mechanisms&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Document password protection and security best practices&lt;/li>
&lt;/ul></description></item><item><title>Encrypted C2, Persistence &amp; Auth</title><link>/docs/04-epirootkit/features/persistence/</link><pubDate>Sun, 11 May 2025 18:30:00 +0100</pubDate><guid>/docs/04-epirootkit/features/persistence/</guid><description>&lt;h2 id="todo-implement-persistence--auth-features">TODO: Implement Persistence &amp;amp; Auth Features &lt;a href="#todo-implement-persistence--auth-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Implement encrypted C2 heartbeat and reconnection logic&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add autoload on boot (persistence) via module config&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement password protection for sensitive commands&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Store and verify password hashes securely&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Test persistence and authentication on supported systems&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Symbol Resolution &amp; Ftrace Hooks</title><link>/docs/04-epirootkit/features/symbol-ftrace/</link><pubDate>Sun, 11 May 2025 18:20:00 +0100</pubDate><guid>/docs/04-epirootkit/features/symbol-ftrace/</guid><description>&lt;h2 id="todo-implement-symbol-resolution--ftrace-hooks">TODO: Implement Symbol Resolution &amp;amp; Ftrace Hooks &lt;a href="#todo-implement-symbol-resolution--ftrace-hooks" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Implement dynamic symbol resolution (e.g., &lt;code>kallsyms_lookup_name&lt;/code>)&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add ftrace-based syscall hooking&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Ensure safe registration/unregistration of hooks&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Document implementation and kernel compatibility&lt;/li>
&lt;/ul></description></item><item><title>Bonus Features</title><link>/docs/04-epirootkit/features/bonus-features/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/04-epirootkit/features/bonus-features/</guid><description>&lt;h2 id="todo-implement-bonus-features">TODO: Implement Bonus Features &lt;a href="#todo-implement-bonus-features" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Add rootkit upgrade mechanism&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement packet hiding and keylogging&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add network traffic redirection&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement NGL clone with the backdoor&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Document and test all bonus features&lt;/li>
&lt;/ul>
&lt;p>&lt;em>This section will be updated with documentation once features are implemented and tested.&lt;/em>&lt;/p></description></item><item><title>Overview</title><link>/docs/06-web-ui/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/06-web-ui/overview/</guid><description>&lt;figure class="img-fluid">&lt;img src="/images/webui/main-dashboard.png"
 alt="Web UI">
&lt;/figure>

&lt;p>The Web UI is a modern frontend for the EpiRootkit Attacking Program (C2 Server). It provides a graphical, tiling window manager interface for managing clients, sending commands, and monitoring events.&lt;/p>
&lt;p>&lt;strong>Philosophy:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Usability and productivity for operators&lt;/li>
&lt;li>Real-time feedback and event visibility&lt;/li>
&lt;li>Extensible, modular panel system&lt;/li>
&lt;li>Keyboard-driven workflow (with mouse support)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Main Features:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Tiling window manager UI for flexible panel arrangement&lt;/li>
&lt;li>Real-time event log panel&lt;/li>
&lt;li>Terminal, Overview, and Upload/Download panels&lt;/li>
&lt;li>Global keyboard shortcuts for all major actions&lt;/li>
&lt;li>Drag-and-drop panel reordering&lt;/li>
&lt;/ul>
&lt;p>This section covers the rationale, features, and usage of the Web UI. See the following pages for details on setup, features, and development notes.&lt;/p></description></item><item><title>Installation &amp; Setup</title><link>/docs/06-web-ui/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/06-web-ui/installation/</guid><description>&lt;h1 id="web-ui-installation--setup">Web UI Installation &amp;amp; Setup &lt;a href="#web-ui-installation--setup" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h1>&lt;blockquote>
&lt;p>&lt;strong>Assumption:&lt;/strong> You are starting from a fresh Ubuntu system. Complete &lt;a data-bs-delay="{&amp;#34;hide&amp;#34;:300,&amp;#34;show&amp;#34;:550}" data-bs-html="true" data-bs-title="&lt;a href='/docs/02-setup/environment/'>&lt;p>SETUP&lt;/p>&lt;strong>Initial Setup &amp; Installation&lt;/strong>&lt;br>Prepare your host system from scratch for the EpiRootkit project.&lt;/a>" data-bs-toggle="tooltip" href="/docs/02-setup/environment/">Host Environment Setup&lt;/a> first.&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-install-nodejs-npm-and-pnpm">1. Install Node.js, npm, and pnpm &lt;a href="#1-install-nodejs-npm-and-pnpm" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>If not already installed, run:&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="3f389ed" class="language-bash ">
 &lt;code>sudo apt update
sudo apt install -y nodejs npm
sudo npm install -g pnpm&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;blockquote>

&lt;div class="alert alert-info d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">
 
 &lt;span class="material-icons size-20 me-2">
 info
 &lt;/span>&lt;/div>
 
 &lt;div class="w-100">Check your versions: Node.js v18+ and pnpm v8+ are recommended. Use &lt;code>node -v&lt;/code> and &lt;code>pnpm -v&lt;/code> to verify.&lt;/div>
 &lt;/div>
&lt;/blockquote>
&lt;h2 id="2-navigate-to-the-web-ui-directory">2. Navigate to the Web UI Directory &lt;a href="#2-navigate-to-the-web-ui-directory" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="db8fc69" class="language-bash ">
 &lt;code>cd webui&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="3-install-dependencies">3. Install Dependencies &lt;a href="#3-install-dependencies" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="b879665" class="language-bash ">
 &lt;code>pnpm install
# Or, if you prefer npm:
npm install&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;h2 id="4-start-the-development-server">4. Start the Development Server &lt;a href="#4-start-the-development-server" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>


 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="b881346" class="language-bash ">
 &lt;code>pnpm run dev
# Or
npm run dev&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Open your browser and go to &lt;a href="http://localhost:5173" rel="external" target="_blank">http://localhost:5173&lt;svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">&lt;path fill="currentColor" d="M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z"/>&lt;/svg>&lt;/a> (or the port shown in your terminal).&lt;/p></description></item><item><title>i3 like interface</title><link>/docs/06-web-ui/i3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/06-web-ui/i3/</guid><description>&lt;h2 id="i3-like-interface">i3 like interface &lt;a href="#i3-like-interface" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Yes, you read that right. I really tried to make this part of the Web UI feel like i3-wm.&lt;/p>
&lt;figure class="img-fluid">&lt;img src="/images/webui/i3.png"
 alt="i3 like interface">
&lt;/figure>

&lt;p>Basically it&amp;rsquo;s a tiling window manager that allows you to move panels around with the keyboard.&lt;/p>
&lt;h2 id="why-">Why ? &lt;a href="#why-" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;p>Because I bloody can, that&amp;rsquo;s why.&lt;/p>

&lt;div class="alert alert-info d-flex" role="alert">
 &lt;div class="flex-shrink-1 alert-icon">
 
 &lt;span class="material-icons size-20 me-2">
 info
 &lt;/span>&lt;/div>
 
 &lt;div class="w-100">I had to use &lt;code>Alt&lt;/code> as Modifier, I&amp;rsquo;m truly saddened by this but Ubuntu wouldn&amp;rsquo;t let me use the &lt;code>Windows&lt;/code> key in firefox&amp;hellip;&lt;/div>
 &lt;/div>
&lt;p>You can use this as like a dashboard widgets where you can move the panels around resize them etc to neatly manage your precious display real estate.&lt;/p></description></item><item><title>Tux Fan Club: Chasse au Trésor Pirate</title><link>/docs/07-bonuses/wlkom-ctf/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/07-bonuses/wlkom-ctf/</guid><description>&lt;h2 id="treasure-hunt-">Treasure Hunt 🪙 &lt;a href="#treasure-hunt-" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h2>&lt;h3 id="découverte-dun-mystérieux-fichier">Découverte d&amp;rsquo;un mystérieux fichier&amp;hellip; &lt;a href="#d%c3%a9couverte-dun-myst%c3%a9rieux-fichier" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h3>&lt;p>Nous avons décidé d&amp;rsquo;accepter une &lt;em>quête secondaire&lt;/em> durant le projet &lt;code>Rootkit&lt;/code>.&lt;/p>
&lt;p>En effet, comme tout bon pirate, nous avons téléchargé &lt;em>légalement&lt;/em> les fichiers fournis (&lt;code>given files&lt;/code>) et nous souhaitions les ignorer avec un fichier &lt;code>.gitignore&lt;/code>.&lt;/p>
&lt;p>Le &lt;code>.gitignore&lt;/code> ressemblait à :&lt;/p>



 
 
 

 
 
 
 

 

 &lt;div class="prism-codeblock ">
 &lt;pre id="00cf8f5" class="language-bash ">
 &lt;code>.gitignore
givenfiles/&lt;/code>
 &lt;/pre>
 &lt;/div>
&lt;p>Sauf que les fichiers n&amp;rsquo;étaient pas ignorés. C&amp;rsquo;est là que nous découvrons un mystérieux fichier &lt;code>.README&lt;/code> :&lt;/p>
&lt;p>&lt;figure>&lt;img src="/images/ctf/givenfilestree.png"
 alt="Arborescence révélant le fichier caché">
&lt;/figure>

&lt;em>Arborescence révélant le fichier caché&lt;/em>&lt;/p></description></item><item><title>Un dernier mot</title><link>/docs/08-remerciements/thankyou/</link><pubDate>Wed, 07 May 2025 00:44:31 +0100</pubDate><guid>/docs/08-remerciements/thankyou/</guid><description>&lt;h1 id="hugo">Hugo &lt;a href="#hugo" class="anchor" aria-hidden="true">&lt;i class="material-icons align-middle">link&lt;/i>&lt;/a>&lt;/h1>&lt;p>Bonjour,&lt;/p>
&lt;p>Merci beaucoup Jules pour ce projet!&lt;/p>
&lt;p>Il m&amp;rsquo;a permis d’expérimenter plein de sujets différents, j&amp;rsquo;ai profité de l&amp;rsquo;excuse de &amp;ldquo;c&amp;rsquo;est pour le travail d&amp;rsquo;EPITA&amp;rdquo; pour tester le Lotus Docs (le framework de la documentation sur lequel ces mots sont écrits), j&amp;rsquo;ai pu mettre en pratique directement ce que j&amp;rsquo;ai pu apprendre dans mon travail, notamment j&amp;rsquo;avais dû faire une présentation sur un rootkit (PUMAKIT) à ma boîte, et j&amp;rsquo;ai pu m&amp;rsquo;en inspirer et recréer le rootkit en améliorant certaines fonctionnalités (car franchement il était assez mal foutu, les Chinois n&amp;rsquo;ont qu’à bien se tenir). J&amp;rsquo;ai eu l’occasion de discuter avec certains SRS pour avoir des avis sur certaines implémentations. Spoiler, ils étaient tous jaloux du fait que en première année d&amp;rsquo;alternance on fait un projet aussi cool alors qu&amp;rsquo;ils se tapent de l’Active Directory depuis 2 mois.&lt;/p></description></item></channel></rss>